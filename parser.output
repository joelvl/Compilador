Terminals unused in grammar

   CHAR_VALUE


State 65 conflicts: 1 shift/reduce
State 123 conflicts: 2 shift/reduce
State 124 conflicts: 2 shift/reduce
State 160 conflicts: 15 reduce/reduce
State 161 conflicts: 15 reduce/reduce
State 162 conflicts: 15 reduce/reduce
State 163 conflicts: 15 reduce/reduce
State 164 conflicts: 15 reduce/reduce
State 165 conflicts: 15 reduce/reduce
State 166 conflicts: 15 reduce/reduce
State 167 conflicts: 15 reduce/reduce
State 168 conflicts: 15 reduce/reduce
State 169 conflicts: 15 reduce/reduce
State 170 conflicts: 15 reduce/reduce
State 171 conflicts: 15 reduce/reduce
State 172 conflicts: 15 reduce/reduce
State 175 conflicts: 15 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decls

    2 decls: decl
    3      | decls decl

    4 decl: variableDecl
    5     | functionDecl
    6     | classDecl
    7     | interfaceDecl

    8 optArray: %empty
    9         | SBO SBC

   10 identifiers: IDENTIFIER
   11            | identifiers IDENTIFIER

   12 functionDecl: type IDENTIFIER BO formals BC stmtBlock
   13             | VOID IDENTIFIER BO formals BC stmtBlock

   14 formals: variable
   15        | formals COMMA variable

   16 classDecl: CLASS IDENTIFIER optExtends optImplements CBO fields CBC

   17 optExtends: EXTENDS IDENTIFIER
   18           | %empty

   19 optImplements: IMPLEMENTS identifiers
   20              | %empty

   21 fields: %empty
   22       | fields field

   23 field: variableDecl
   24      | functionDecl

   25 interfaceDecl: INTERFACE IDENTIFIER CBO prototype CBC

   26 prototype: %empty
   27          | type IDENTIFIER BO formals BC SEMICOLON
   28          | VOID IDENTIFIER BO formals BC SEMICOLON

   29 variableDecls: %empty
   30              | variableDecls variableDecl

   31 stmts: %empty
   32      | stmts stmt

   33 stmtBlock: CBO variableDecls stmts CBC

   34 variableDecl: variable SEMICOLON

   35 variable: type IDENTIFIER

   36 type: INT optArray
   37     | DOUBLE optArray
   38     | BOOL optArray
   39     | STRING optArray
   40     | IDENTIFIER optArray

   41 stmt: ifStmt
   42     | expression SEMICOLON
   43     | whileStmt
   44     | forStmt
   45     | breakStmt
   46     | returnStmt
   47     | printStmt
   48     | stmtBlock

   49 ifStmt: IF BO expression BC stmtBlock optElse

   50 optElse: %empty
   51        | ELSE stmtBlock

   52 whileStmt: WHILE BO expression BC stmtBlock

   53 forStmt: FOR BO expression SEMICOLON expression SEMICOLON expression BC stmtBlock

   54 returnStmt: RETURN expression SEMICOLON

   55 breakStmt: BREAK SEMICOLON

   56 printStmt: PRINT BO expressionList BC SEMICOLON

   57 expressionList: expression
   58               | expressionList COMMA expression

   59 expression: expression PLUS tExpression
   60           | expression MINUS tExpression
   61           | expression MUL tExpression
   62           | expression DIV tExpression
   63           | expression MOD tExpression
   64           | expression LESS tExpression
   65           | expression LESSEQUAL tExpression
   66           | expression GREATER tExpression
   67           | expression GREATEREQUAL tExpression
   68           | expression EQUALEQUAL tExpression
   69           | expression NOTEQUAL tExpression
   70           | expression AND tExpression
   71           | expression OR tExpression
   72           | tExpression

   73 tExpression: lValue optEqual
   74            | constant
   75            | call
   76            | THIS
   77            | BO expression BC
   78            | MINUS expression
   79            | NOT expression
   80            | READINTEGER BO BC
   81            | READLINE BO BC
   82            | NEW BO IDENTIFIER BC
   83            | NEWARRAY BO expression COMMA type BC

   84 optEqual: %empty
   85         | EQUAL expression

   86 lValue: IDENTIFIER
   87       | expression DOT IDENTIFIER
   88       | expression SBO expression SBC

   89 call: IDENTIFIER BO actualList BC
   90     | expression DOT IDENTIFIER BO actualList BC

   91 actualList: actuals
   92           | %empty

   93 actuals: expression
   94        | actuals COMMA expression

   95 constant: INT_VALUE
   96         | DOUBLE_VALUE
   97         | _TRUE
   98         | _FALSE
   99         | STRING_VALUE
  100         | _NULL


Terminals, with rules where they appear

$end (0) 0
error (256)
VOID (258) 13 28
INT (259) 36
DOUBLE (260) 37
BOOL (261) 38
STRING (262) 39
CLASS (263) 16
INTERFACE (264) 25
_NULL (265) 100
THIS (266) 76
EXTENDS (267) 17
IMPLEMENTS (268) 19
FOR (269) 53
WHILE (270) 52
IF (271) 49
ELSE (272) 51
RETURN (273) 54
BREAK (274) 55
NEW (275) 82
NEWARRAY (276) 83
PRINT (277) 56
READINTEGER (278) 80
READLINE (279) 81
_TRUE (280) 97
_FALSE (281) 98
PLUS (282) 59
MINUS (283) 60 78
MUL (284) 61
DIV (285) 62
MOD (286) 63
LESS (287) 64
LESSEQUAL (288) 65
GREATER (289) 66
GREATEREQUAL (290) 67
EQUALEQUAL (291) 68
EQUAL (292) 85
NOTEQUAL (293) 69
AND (294) 70
OR (295) 71
NOT (296) 79
SEMICOLON (297) 27 28 34 42 53 54 55 56
COMMA (298) 15 58 83 94
DOT (299) 87 90
SBO (300) 9 88
SBC (301) 9 88
BO (302) 12 13 27 28 49 52 53 56 77 80 81 82 83 89 90
BC (303) 12 13 27 28 49 52 53 56 77 80 81 82 83 89 90
CBO (304) 16 25 33
CBC (305) 16 25 33
INT_VALUE <ival> (306) 95
DOUBLE_VALUE <dval> (307) 96
CHAR_VALUE <cval> (308)
STRING_VALUE <sval> (309) 99
IDENTIFIER <sval> (310) 10 11 12 13 16 17 25 27 28 35 40 82 86 87 89
    90


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1, on right: 0
decls (58)
    on left: 2 3, on right: 1 3
decl (59)
    on left: 4 5 6 7, on right: 2 3
optArray (60)
    on left: 8 9, on right: 36 37 38 39 40
identifiers (61)
    on left: 10 11, on right: 11 19
functionDecl (62)
    on left: 12 13, on right: 5 24
formals (63)
    on left: 14 15, on right: 12 13 15 27 28
classDecl (64)
    on left: 16, on right: 6
optExtends (65)
    on left: 17 18, on right: 16
optImplements (66)
    on left: 19 20, on right: 16
fields (67)
    on left: 21 22, on right: 16 22
field (68)
    on left: 23 24, on right: 22
interfaceDecl (69)
    on left: 25, on right: 7
prototype (70)
    on left: 26 27 28, on right: 25
variableDecls (71)
    on left: 29 30, on right: 30 33
stmts (72)
    on left: 31 32, on right: 32 33
stmtBlock (73)
    on left: 33, on right: 12 13 48 49 51 52 53
variableDecl (74)
    on left: 34, on right: 4 23 30
variable (75)
    on left: 35, on right: 14 15 34
type (76)
    on left: 36 37 38 39 40, on right: 12 27 35 83
stmt (77)
    on left: 41 42 43 44 45 46 47 48, on right: 32
ifStmt (78)
    on left: 49, on right: 41
optElse (79)
    on left: 50 51, on right: 49
whileStmt (80)
    on left: 52, on right: 43
forStmt (81)
    on left: 53, on right: 44
returnStmt (82)
    on left: 54, on right: 46
breakStmt (83)
    on left: 55, on right: 45
printStmt (84)
    on left: 56, on right: 47
expressionList (85)
    on left: 57 58, on right: 56 58
expression (86)
    on left: 59 60 61 62 63 64 65 66 67 68 69 70 71 72, on right: 42
    49 52 53 54 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 77 78
    79 83 85 87 88 90 93 94
tExpression (87)
    on left: 73 74 75 76 77 78 79 80 81 82 83, on right: 59 60 61 62
    63 64 65 66 67 68 69 70 71 72
optEqual (88)
    on left: 84 85, on right: 73
lValue (89)
    on left: 86 87 88, on right: 73
call (90)
    on left: 89 90, on right: 75
actualList (91)
    on left: 91 92, on right: 89 90
actuals (92)
    on left: 93 94, on right: 91 94
constant (93)
    on left: 95 96 97 98 99 100, on right: 74


State 0

    0 $accept: . program $end

    VOID        shift, and go to state 1
    INT         shift, and go to state 2
    DOUBLE      shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    CLASS       shift, and go to state 6
    INTERFACE   shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    program        go to state 9
    decls          go to state 10
    decl           go to state 11
    functionDecl   go to state 12
    classDecl      go to state 13
    interfaceDecl  go to state 14
    variableDecl   go to state 15
    variable       go to state 16
    type           go to state 17


State 1

   13 functionDecl: VOID . IDENTIFIER BO formals BC stmtBlock

    IDENTIFIER  shift, and go to state 18


State 2

   36 type: INT . optArray

    SBO  shift, and go to state 19

    $default  reduce using rule 8 (optArray)

    optArray  go to state 20


State 3

   37 type: DOUBLE . optArray

    SBO  shift, and go to state 19

    $default  reduce using rule 8 (optArray)

    optArray  go to state 21


State 4

   38 type: BOOL . optArray

    SBO  shift, and go to state 19

    $default  reduce using rule 8 (optArray)

    optArray  go to state 22


State 5

   39 type: STRING . optArray

    SBO  shift, and go to state 19

    $default  reduce using rule 8 (optArray)

    optArray  go to state 23


State 6

   16 classDecl: CLASS . IDENTIFIER optExtends optImplements CBO fields CBC

    IDENTIFIER  shift, and go to state 24


State 7

   25 interfaceDecl: INTERFACE . IDENTIFIER CBO prototype CBC

    IDENTIFIER  shift, and go to state 25


State 8

   40 type: IDENTIFIER . optArray

    SBO  shift, and go to state 19

    $default  reduce using rule 8 (optArray)

    optArray  go to state 26


State 9

    0 $accept: program . $end

    $end  shift, and go to state 27


State 10

    1 program: decls .
    3 decls: decls . decl

    VOID        shift, and go to state 1
    INT         shift, and go to state 2
    DOUBLE      shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    CLASS       shift, and go to state 6
    INTERFACE   shift, and go to state 7
    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 1 (program)

    decl           go to state 28
    functionDecl   go to state 12
    classDecl      go to state 13
    interfaceDecl  go to state 14
    variableDecl   go to state 15
    variable       go to state 16
    type           go to state 17


State 11

    2 decls: decl .

    $default  reduce using rule 2 (decls)


State 12

    5 decl: functionDecl .

    $default  reduce using rule 5 (decl)


State 13

    6 decl: classDecl .

    $default  reduce using rule 6 (decl)


State 14

    7 decl: interfaceDecl .

    $default  reduce using rule 7 (decl)


State 15

    4 decl: variableDecl .

    $default  reduce using rule 4 (decl)


State 16

   34 variableDecl: variable . SEMICOLON

    SEMICOLON  shift, and go to state 29


State 17

   12 functionDecl: type . IDENTIFIER BO formals BC stmtBlock
   35 variable: type . IDENTIFIER

    IDENTIFIER  shift, and go to state 30


State 18

   13 functionDecl: VOID IDENTIFIER . BO formals BC stmtBlock

    BO  shift, and go to state 31


State 19

    9 optArray: SBO . SBC

    SBC  shift, and go to state 32


State 20

   36 type: INT optArray .

    $default  reduce using rule 36 (type)


State 21

   37 type: DOUBLE optArray .

    $default  reduce using rule 37 (type)


State 22

   38 type: BOOL optArray .

    $default  reduce using rule 38 (type)


State 23

   39 type: STRING optArray .

    $default  reduce using rule 39 (type)


State 24

   16 classDecl: CLASS IDENTIFIER . optExtends optImplements CBO fields CBC

    EXTENDS  shift, and go to state 33

    $default  reduce using rule 18 (optExtends)

    optExtends  go to state 34


State 25

   25 interfaceDecl: INTERFACE IDENTIFIER . CBO prototype CBC

    CBO  shift, and go to state 35


State 26

   40 type: IDENTIFIER optArray .

    $default  reduce using rule 40 (type)


State 27

    0 $accept: program $end .

    $default  accept


State 28

    3 decls: decls decl .

    $default  reduce using rule 3 (decls)


State 29

   34 variableDecl: variable SEMICOLON .

    $default  reduce using rule 34 (variableDecl)


State 30

   12 functionDecl: type IDENTIFIER . BO formals BC stmtBlock
   35 variable: type IDENTIFIER .

    BO  shift, and go to state 36

    $default  reduce using rule 35 (variable)


State 31

   13 functionDecl: VOID IDENTIFIER BO . formals BC stmtBlock

    INT         shift, and go to state 2
    DOUBLE      shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 8

    formals   go to state 37
    variable  go to state 38
    type      go to state 39


State 32

    9 optArray: SBO SBC .

    $default  reduce using rule 9 (optArray)


State 33

   17 optExtends: EXTENDS . IDENTIFIER

    IDENTIFIER  shift, and go to state 40


State 34

   16 classDecl: CLASS IDENTIFIER optExtends . optImplements CBO fields CBC

    IMPLEMENTS  shift, and go to state 41

    $default  reduce using rule 20 (optImplements)

    optImplements  go to state 42


State 35

   25 interfaceDecl: INTERFACE IDENTIFIER CBO . prototype CBC

    VOID        shift, and go to state 43
    INT         shift, and go to state 2
    DOUBLE      shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 8

    $default  reduce using rule 26 (prototype)

    prototype  go to state 44
    type       go to state 45


State 36

   12 functionDecl: type IDENTIFIER BO . formals BC stmtBlock

    INT         shift, and go to state 2
    DOUBLE      shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 8

    formals   go to state 46
    variable  go to state 38
    type      go to state 39


State 37

   13 functionDecl: VOID IDENTIFIER BO formals . BC stmtBlock
   15 formals: formals . COMMA variable

    COMMA  shift, and go to state 47
    BC     shift, and go to state 48


State 38

   14 formals: variable .

    $default  reduce using rule 14 (formals)


State 39

   35 variable: type . IDENTIFIER

    IDENTIFIER  shift, and go to state 49


State 40

   17 optExtends: EXTENDS IDENTIFIER .

    $default  reduce using rule 17 (optExtends)


State 41

   19 optImplements: IMPLEMENTS . identifiers

    IDENTIFIER  shift, and go to state 50

    identifiers  go to state 51


State 42

   16 classDecl: CLASS IDENTIFIER optExtends optImplements . CBO fields CBC

    CBO  shift, and go to state 52


State 43

   28 prototype: VOID . IDENTIFIER BO formals BC SEMICOLON

    IDENTIFIER  shift, and go to state 53


State 44

   25 interfaceDecl: INTERFACE IDENTIFIER CBO prototype . CBC

    CBC  shift, and go to state 54


State 45

   27 prototype: type . IDENTIFIER BO formals BC SEMICOLON

    IDENTIFIER  shift, and go to state 55


State 46

   12 functionDecl: type IDENTIFIER BO formals . BC stmtBlock
   15 formals: formals . COMMA variable

    COMMA  shift, and go to state 47
    BC     shift, and go to state 56


State 47

   15 formals: formals COMMA . variable

    INT         shift, and go to state 2
    DOUBLE      shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 8

    variable  go to state 57
    type      go to state 39


State 48

   13 functionDecl: VOID IDENTIFIER BO formals BC . stmtBlock

    CBO  shift, and go to state 58

    stmtBlock  go to state 59


State 49

   35 variable: type IDENTIFIER .

    $default  reduce using rule 35 (variable)


State 50

   10 identifiers: IDENTIFIER .

    $default  reduce using rule 10 (identifiers)


State 51

   11 identifiers: identifiers . IDENTIFIER
   19 optImplements: IMPLEMENTS identifiers .

    IDENTIFIER  shift, and go to state 60

    $default  reduce using rule 19 (optImplements)


State 52

   16 classDecl: CLASS IDENTIFIER optExtends optImplements CBO . fields CBC

    $default  reduce using rule 21 (fields)

    fields  go to state 61


State 53

   28 prototype: VOID IDENTIFIER . BO formals BC SEMICOLON

    BO  shift, and go to state 62


State 54

   25 interfaceDecl: INTERFACE IDENTIFIER CBO prototype CBC .

    $default  reduce using rule 25 (interfaceDecl)


State 55

   27 prototype: type IDENTIFIER . BO formals BC SEMICOLON

    BO  shift, and go to state 63


State 56

   12 functionDecl: type IDENTIFIER BO formals BC . stmtBlock

    CBO  shift, and go to state 58

    stmtBlock  go to state 64


State 57

   15 formals: formals COMMA variable .

    $default  reduce using rule 15 (formals)


State 58

   33 stmtBlock: CBO . variableDecls stmts CBC

    $default  reduce using rule 29 (variableDecls)

    variableDecls  go to state 65


State 59

   13 functionDecl: VOID IDENTIFIER BO formals BC stmtBlock .

    $default  reduce using rule 13 (functionDecl)


State 60

   11 identifiers: identifiers IDENTIFIER .

    $default  reduce using rule 11 (identifiers)


State 61

   16 classDecl: CLASS IDENTIFIER optExtends optImplements CBO fields . CBC
   22 fields: fields . field

    VOID        shift, and go to state 1
    INT         shift, and go to state 2
    DOUBLE      shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    CBC         shift, and go to state 66
    IDENTIFIER  shift, and go to state 8

    functionDecl  go to state 67
    field         go to state 68
    variableDecl  go to state 69
    variable      go to state 16
    type          go to state 17


State 62

   28 prototype: VOID IDENTIFIER BO . formals BC SEMICOLON

    INT         shift, and go to state 2
    DOUBLE      shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 8

    formals   go to state 70
    variable  go to state 38
    type      go to state 39


State 63

   27 prototype: type IDENTIFIER BO . formals BC SEMICOLON

    INT         shift, and go to state 2
    DOUBLE      shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 8

    formals   go to state 71
    variable  go to state 38
    type      go to state 39


State 64

   12 functionDecl: type IDENTIFIER BO formals BC stmtBlock .

    $default  reduce using rule 12 (functionDecl)


State 65

   30 variableDecls: variableDecls . variableDecl
   33 stmtBlock: CBO variableDecls . stmts CBC

    INT         shift, and go to state 2
    DOUBLE      shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 8

    IDENTIFIER  [reduce using rule 31 (stmts)]
    $default    reduce using rule 31 (stmts)

    stmts         go to state 72
    variableDecl  go to state 73
    variable      go to state 16
    type          go to state 39


State 66

   16 classDecl: CLASS IDENTIFIER optExtends optImplements CBO fields CBC .

    $default  reduce using rule 16 (classDecl)


State 67

   24 field: functionDecl .

    $default  reduce using rule 24 (field)


State 68

   22 fields: fields field .

    $default  reduce using rule 22 (fields)


State 69

   23 field: variableDecl .

    $default  reduce using rule 23 (field)


State 70

   15 formals: formals . COMMA variable
   28 prototype: VOID IDENTIFIER BO formals . BC SEMICOLON

    COMMA  shift, and go to state 47
    BC     shift, and go to state 74


State 71

   15 formals: formals . COMMA variable
   27 prototype: type IDENTIFIER BO formals . BC SEMICOLON

    COMMA  shift, and go to state 47
    BC     shift, and go to state 75


State 72

   32 stmts: stmts . stmt
   33 stmtBlock: CBO variableDecls stmts . CBC

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    FOR           shift, and go to state 78
    WHILE         shift, and go to state 79
    IF            shift, and go to state 80
    RETURN        shift, and go to state 81
    BREAK         shift, and go to state 82
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    PRINT         shift, and go to state 85
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    CBO           shift, and go to state 58
    CBC           shift, and go to state 93
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    stmtBlock    go to state 98
    stmt         go to state 99
    ifStmt       go to state 100
    whileStmt    go to state 101
    forStmt      go to state 102
    returnStmt   go to state 103
    breakStmt    go to state 104
    printStmt    go to state 105
    expression   go to state 106
    tExpression  go to state 107
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 73

   30 variableDecls: variableDecls variableDecl .

    $default  reduce using rule 30 (variableDecls)


State 74

   28 prototype: VOID IDENTIFIER BO formals BC . SEMICOLON

    SEMICOLON  shift, and go to state 111


State 75

   27 prototype: type IDENTIFIER BO formals BC . SEMICOLON

    SEMICOLON  shift, and go to state 112


State 76

  100 constant: _NULL .

    $default  reduce using rule 100 (constant)


State 77

   76 tExpression: THIS .

    $default  reduce using rule 76 (tExpression)


State 78

   53 forStmt: FOR . BO expression SEMICOLON expression SEMICOLON expression BC stmtBlock

    BO  shift, and go to state 113


State 79

   52 whileStmt: WHILE . BO expression BC stmtBlock

    BO  shift, and go to state 114


State 80

   49 ifStmt: IF . BO expression BC stmtBlock optElse

    BO  shift, and go to state 115


State 81

   54 returnStmt: RETURN . expression SEMICOLON

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 116
    tExpression  go to state 107
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 82

   55 breakStmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 117


State 83

   82 tExpression: NEW . BO IDENTIFIER BC

    BO  shift, and go to state 118


State 84

   83 tExpression: NEWARRAY . BO expression COMMA type BC

    BO  shift, and go to state 119


State 85

   56 printStmt: PRINT . BO expressionList BC SEMICOLON

    BO  shift, and go to state 120


State 86

   80 tExpression: READINTEGER . BO BC

    BO  shift, and go to state 121


State 87

   81 tExpression: READLINE . BO BC

    BO  shift, and go to state 122


State 88

   97 constant: _TRUE .

    $default  reduce using rule 97 (constant)


State 89

   98 constant: _FALSE .

    $default  reduce using rule 98 (constant)


State 90

   78 tExpression: MINUS . expression

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 123
    tExpression  go to state 107
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 91

   79 tExpression: NOT . expression

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 124
    tExpression  go to state 107
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 92

   77 tExpression: BO . expression BC

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 125
    tExpression  go to state 107
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 93

   33 stmtBlock: CBO variableDecls stmts CBC .

    $default  reduce using rule 33 (stmtBlock)


State 94

   95 constant: INT_VALUE .

    $default  reduce using rule 95 (constant)


State 95

   96 constant: DOUBLE_VALUE .

    $default  reduce using rule 96 (constant)


State 96

   99 constant: STRING_VALUE .

    $default  reduce using rule 99 (constant)


State 97

   86 lValue: IDENTIFIER .
   89 call: IDENTIFIER . BO actualList BC

    BO  shift, and go to state 126

    $default  reduce using rule 86 (lValue)


State 98

   48 stmt: stmtBlock .

    $default  reduce using rule 48 (stmt)


State 99

   32 stmts: stmts stmt .

    $default  reduce using rule 32 (stmts)


State 100

   41 stmt: ifStmt .

    $default  reduce using rule 41 (stmt)


State 101

   43 stmt: whileStmt .

    $default  reduce using rule 43 (stmt)


State 102

   44 stmt: forStmt .

    $default  reduce using rule 44 (stmt)


State 103

   46 stmt: returnStmt .

    $default  reduce using rule 46 (stmt)


State 104

   45 stmt: breakStmt .

    $default  reduce using rule 45 (stmt)


State 105

   47 stmt: printStmt .

    $default  reduce using rule 47 (stmt)


State 106

   42 stmt: expression . SEMICOLON
   59 expression: expression . PLUS tExpression
   60           | expression . MINUS tExpression
   61           | expression . MUL tExpression
   62           | expression . DIV tExpression
   63           | expression . MOD tExpression
   64           | expression . LESS tExpression
   65           | expression . LESSEQUAL tExpression
   66           | expression . GREATER tExpression
   67           | expression . GREATEREQUAL tExpression
   68           | expression . EQUALEQUAL tExpression
   69           | expression . NOTEQUAL tExpression
   70           | expression . AND tExpression
   71           | expression . OR tExpression
   87 lValue: expression . DOT IDENTIFIER
   88       | expression . SBO expression SBC
   90 call: expression . DOT IDENTIFIER BO actualList BC

    PLUS          shift, and go to state 127
    MINUS         shift, and go to state 128
    MUL           shift, and go to state 129
    DIV           shift, and go to state 130
    MOD           shift, and go to state 131
    LESS          shift, and go to state 132
    LESSEQUAL     shift, and go to state 133
    GREATER       shift, and go to state 134
    GREATEREQUAL  shift, and go to state 135
    EQUALEQUAL    shift, and go to state 136
    NOTEQUAL      shift, and go to state 137
    AND           shift, and go to state 138
    OR            shift, and go to state 139
    SEMICOLON     shift, and go to state 140
    DOT           shift, and go to state 141
    SBO           shift, and go to state 142


State 107

   72 expression: tExpression .

    $default  reduce using rule 72 (expression)


State 108

   73 tExpression: lValue . optEqual

    EQUAL  shift, and go to state 143

    $default  reduce using rule 84 (optEqual)

    optEqual  go to state 144


State 109

   75 tExpression: call .

    $default  reduce using rule 75 (tExpression)


State 110

   74 tExpression: constant .

    $default  reduce using rule 74 (tExpression)


State 111

   28 prototype: VOID IDENTIFIER BO formals BC SEMICOLON .

    $default  reduce using rule 28 (prototype)


State 112

   27 prototype: type IDENTIFIER BO formals BC SEMICOLON .

    $default  reduce using rule 27 (prototype)


State 113

   53 forStmt: FOR BO . expression SEMICOLON expression SEMICOLON expression BC stmtBlock

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 145
    tExpression  go to state 107
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 114

   52 whileStmt: WHILE BO . expression BC stmtBlock

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 146
    tExpression  go to state 107
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 115

   49 ifStmt: IF BO . expression BC stmtBlock optElse

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 147
    tExpression  go to state 107
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 116

   54 returnStmt: RETURN expression . SEMICOLON
   59 expression: expression . PLUS tExpression
   60           | expression . MINUS tExpression
   61           | expression . MUL tExpression
   62           | expression . DIV tExpression
   63           | expression . MOD tExpression
   64           | expression . LESS tExpression
   65           | expression . LESSEQUAL tExpression
   66           | expression . GREATER tExpression
   67           | expression . GREATEREQUAL tExpression
   68           | expression . EQUALEQUAL tExpression
   69           | expression . NOTEQUAL tExpression
   70           | expression . AND tExpression
   71           | expression . OR tExpression
   87 lValue: expression . DOT IDENTIFIER
   88       | expression . SBO expression SBC
   90 call: expression . DOT IDENTIFIER BO actualList BC

    PLUS          shift, and go to state 127
    MINUS         shift, and go to state 128
    MUL           shift, and go to state 129
    DIV           shift, and go to state 130
    MOD           shift, and go to state 131
    LESS          shift, and go to state 132
    LESSEQUAL     shift, and go to state 133
    GREATER       shift, and go to state 134
    GREATEREQUAL  shift, and go to state 135
    EQUALEQUAL    shift, and go to state 136
    NOTEQUAL      shift, and go to state 137
    AND           shift, and go to state 138
    OR            shift, and go to state 139
    SEMICOLON     shift, and go to state 148
    DOT           shift, and go to state 141
    SBO           shift, and go to state 142


State 117

   55 breakStmt: BREAK SEMICOLON .

    $default  reduce using rule 55 (breakStmt)


State 118

   82 tExpression: NEW BO . IDENTIFIER BC

    IDENTIFIER  shift, and go to state 149


State 119

   83 tExpression: NEWARRAY BO . expression COMMA type BC

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 150
    tExpression  go to state 107
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 120

   56 printStmt: PRINT BO . expressionList BC SEMICOLON

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expressionList  go to state 151
    expression      go to state 152
    tExpression     go to state 107
    lValue          go to state 108
    call            go to state 109
    constant        go to state 110


State 121

   80 tExpression: READINTEGER BO . BC

    BC  shift, and go to state 153


State 122

   81 tExpression: READLINE BO . BC

    BC  shift, and go to state 154


State 123

   59 expression: expression . PLUS tExpression
   60           | expression . MINUS tExpression
   61           | expression . MUL tExpression
   62           | expression . DIV tExpression
   63           | expression . MOD tExpression
   64           | expression . LESS tExpression
   65           | expression . LESSEQUAL tExpression
   66           | expression . GREATER tExpression
   67           | expression . GREATEREQUAL tExpression
   68           | expression . EQUALEQUAL tExpression
   69           | expression . NOTEQUAL tExpression
   70           | expression . AND tExpression
   71           | expression . OR tExpression
   78 tExpression: MINUS expression .
   87 lValue: expression . DOT IDENTIFIER
   88       | expression . SBO expression SBC
   90 call: expression . DOT IDENTIFIER BO actualList BC

    MUL           shift, and go to state 129
    DIV           shift, and go to state 130
    MOD           shift, and go to state 131
    LESS          shift, and go to state 132
    LESSEQUAL     shift, and go to state 133
    GREATER       shift, and go to state 134
    GREATEREQUAL  shift, and go to state 135
    EQUALEQUAL    shift, and go to state 136
    NOTEQUAL      shift, and go to state 137
    DOT           shift, and go to state 141
    SBO           shift, and go to state 142

    DOT       [reduce using rule 78 (tExpression)]
    SBO       [reduce using rule 78 (tExpression)]
    $default  reduce using rule 78 (tExpression)


State 124

   59 expression: expression . PLUS tExpression
   60           | expression . MINUS tExpression
   61           | expression . MUL tExpression
   62           | expression . DIV tExpression
   63           | expression . MOD tExpression
   64           | expression . LESS tExpression
   65           | expression . LESSEQUAL tExpression
   66           | expression . GREATER tExpression
   67           | expression . GREATEREQUAL tExpression
   68           | expression . EQUALEQUAL tExpression
   69           | expression . NOTEQUAL tExpression
   70           | expression . AND tExpression
   71           | expression . OR tExpression
   79 tExpression: NOT expression .
   87 lValue: expression . DOT IDENTIFIER
   88       | expression . SBO expression SBC
   90 call: expression . DOT IDENTIFIER BO actualList BC

    PLUS          shift, and go to state 127
    MINUS         shift, and go to state 128
    MUL           shift, and go to state 129
    DIV           shift, and go to state 130
    MOD           shift, and go to state 131
    LESS          shift, and go to state 132
    LESSEQUAL     shift, and go to state 133
    GREATER       shift, and go to state 134
    GREATEREQUAL  shift, and go to state 135
    EQUALEQUAL    shift, and go to state 136
    NOTEQUAL      shift, and go to state 137
    DOT           shift, and go to state 141
    SBO           shift, and go to state 142

    DOT       [reduce using rule 79 (tExpression)]
    SBO       [reduce using rule 79 (tExpression)]
    $default  reduce using rule 79 (tExpression)


State 125

   59 expression: expression . PLUS tExpression
   60           | expression . MINUS tExpression
   61           | expression . MUL tExpression
   62           | expression . DIV tExpression
   63           | expression . MOD tExpression
   64           | expression . LESS tExpression
   65           | expression . LESSEQUAL tExpression
   66           | expression . GREATER tExpression
   67           | expression . GREATEREQUAL tExpression
   68           | expression . EQUALEQUAL tExpression
   69           | expression . NOTEQUAL tExpression
   70           | expression . AND tExpression
   71           | expression . OR tExpression
   77 tExpression: BO expression . BC
   87 lValue: expression . DOT IDENTIFIER
   88       | expression . SBO expression SBC
   90 call: expression . DOT IDENTIFIER BO actualList BC

    PLUS          shift, and go to state 127
    MINUS         shift, and go to state 128
    MUL           shift, and go to state 129
    DIV           shift, and go to state 130
    MOD           shift, and go to state 131
    LESS          shift, and go to state 132
    LESSEQUAL     shift, and go to state 133
    GREATER       shift, and go to state 134
    GREATEREQUAL  shift, and go to state 135
    EQUALEQUAL    shift, and go to state 136
    NOTEQUAL      shift, and go to state 137
    AND           shift, and go to state 138
    OR            shift, and go to state 139
    DOT           shift, and go to state 141
    SBO           shift, and go to state 142
    BC            shift, and go to state 155


State 126

   89 call: IDENTIFIER BO . actualList BC

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    $default  reduce using rule 92 (actualList)

    expression   go to state 156
    tExpression  go to state 107
    lValue       go to state 108
    call         go to state 109
    actualList   go to state 157
    actuals      go to state 158
    constant     go to state 110


State 127

   59 expression: expression PLUS . tExpression

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 159
    tExpression  go to state 160
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 128

   60 expression: expression MINUS . tExpression

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 159
    tExpression  go to state 161
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 129

   61 expression: expression MUL . tExpression

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 159
    tExpression  go to state 162
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 130

   62 expression: expression DIV . tExpression

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 159
    tExpression  go to state 163
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 131

   63 expression: expression MOD . tExpression

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 159
    tExpression  go to state 164
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 132

   64 expression: expression LESS . tExpression

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 159
    tExpression  go to state 165
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 133

   65 expression: expression LESSEQUAL . tExpression

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 159
    tExpression  go to state 166
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 134

   66 expression: expression GREATER . tExpression

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 159
    tExpression  go to state 167
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 135

   67 expression: expression GREATEREQUAL . tExpression

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 159
    tExpression  go to state 168
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 136

   68 expression: expression EQUALEQUAL . tExpression

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 159
    tExpression  go to state 169
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 137

   69 expression: expression NOTEQUAL . tExpression

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 159
    tExpression  go to state 170
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 138

   70 expression: expression AND . tExpression

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 159
    tExpression  go to state 171
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 139

   71 expression: expression OR . tExpression

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 159
    tExpression  go to state 172
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 140

   42 stmt: expression SEMICOLON .

    $default  reduce using rule 42 (stmt)


State 141

   87 lValue: expression DOT . IDENTIFIER
   90 call: expression DOT . IDENTIFIER BO actualList BC

    IDENTIFIER  shift, and go to state 173


State 142

   88 lValue: expression SBO . expression SBC

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 174
    tExpression  go to state 107
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 143

   85 optEqual: EQUAL . expression

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 175
    tExpression  go to state 107
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 144

   73 tExpression: lValue optEqual .

    $default  reduce using rule 73 (tExpression)


State 145

   53 forStmt: FOR BO expression . SEMICOLON expression SEMICOLON expression BC stmtBlock
   59 expression: expression . PLUS tExpression
   60           | expression . MINUS tExpression
   61           | expression . MUL tExpression
   62           | expression . DIV tExpression
   63           | expression . MOD tExpression
   64           | expression . LESS tExpression
   65           | expression . LESSEQUAL tExpression
   66           | expression . GREATER tExpression
   67           | expression . GREATEREQUAL tExpression
   68           | expression . EQUALEQUAL tExpression
   69           | expression . NOTEQUAL tExpression
   70           | expression . AND tExpression
   71           | expression . OR tExpression
   87 lValue: expression . DOT IDENTIFIER
   88       | expression . SBO expression SBC
   90 call: expression . DOT IDENTIFIER BO actualList BC

    PLUS          shift, and go to state 127
    MINUS         shift, and go to state 128
    MUL           shift, and go to state 129
    DIV           shift, and go to state 130
    MOD           shift, and go to state 131
    LESS          shift, and go to state 132
    LESSEQUAL     shift, and go to state 133
    GREATER       shift, and go to state 134
    GREATEREQUAL  shift, and go to state 135
    EQUALEQUAL    shift, and go to state 136
    NOTEQUAL      shift, and go to state 137
    AND           shift, and go to state 138
    OR            shift, and go to state 139
    SEMICOLON     shift, and go to state 176
    DOT           shift, and go to state 141
    SBO           shift, and go to state 142


State 146

   52 whileStmt: WHILE BO expression . BC stmtBlock
   59 expression: expression . PLUS tExpression
   60           | expression . MINUS tExpression
   61           | expression . MUL tExpression
   62           | expression . DIV tExpression
   63           | expression . MOD tExpression
   64           | expression . LESS tExpression
   65           | expression . LESSEQUAL tExpression
   66           | expression . GREATER tExpression
   67           | expression . GREATEREQUAL tExpression
   68           | expression . EQUALEQUAL tExpression
   69           | expression . NOTEQUAL tExpression
   70           | expression . AND tExpression
   71           | expression . OR tExpression
   87 lValue: expression . DOT IDENTIFIER
   88       | expression . SBO expression SBC
   90 call: expression . DOT IDENTIFIER BO actualList BC

    PLUS          shift, and go to state 127
    MINUS         shift, and go to state 128
    MUL           shift, and go to state 129
    DIV           shift, and go to state 130
    MOD           shift, and go to state 131
    LESS          shift, and go to state 132
    LESSEQUAL     shift, and go to state 133
    GREATER       shift, and go to state 134
    GREATEREQUAL  shift, and go to state 135
    EQUALEQUAL    shift, and go to state 136
    NOTEQUAL      shift, and go to state 137
    AND           shift, and go to state 138
    OR            shift, and go to state 139
    DOT           shift, and go to state 141
    SBO           shift, and go to state 142
    BC            shift, and go to state 177


State 147

   49 ifStmt: IF BO expression . BC stmtBlock optElse
   59 expression: expression . PLUS tExpression
   60           | expression . MINUS tExpression
   61           | expression . MUL tExpression
   62           | expression . DIV tExpression
   63           | expression . MOD tExpression
   64           | expression . LESS tExpression
   65           | expression . LESSEQUAL tExpression
   66           | expression . GREATER tExpression
   67           | expression . GREATEREQUAL tExpression
   68           | expression . EQUALEQUAL tExpression
   69           | expression . NOTEQUAL tExpression
   70           | expression . AND tExpression
   71           | expression . OR tExpression
   87 lValue: expression . DOT IDENTIFIER
   88       | expression . SBO expression SBC
   90 call: expression . DOT IDENTIFIER BO actualList BC

    PLUS          shift, and go to state 127
    MINUS         shift, and go to state 128
    MUL           shift, and go to state 129
    DIV           shift, and go to state 130
    MOD           shift, and go to state 131
    LESS          shift, and go to state 132
    LESSEQUAL     shift, and go to state 133
    GREATER       shift, and go to state 134
    GREATEREQUAL  shift, and go to state 135
    EQUALEQUAL    shift, and go to state 136
    NOTEQUAL      shift, and go to state 137
    AND           shift, and go to state 138
    OR            shift, and go to state 139
    DOT           shift, and go to state 141
    SBO           shift, and go to state 142
    BC            shift, and go to state 178


State 148

   54 returnStmt: RETURN expression SEMICOLON .

    $default  reduce using rule 54 (returnStmt)


State 149

   82 tExpression: NEW BO IDENTIFIER . BC

    BC  shift, and go to state 179


State 150

   59 expression: expression . PLUS tExpression
   60           | expression . MINUS tExpression
   61           | expression . MUL tExpression
   62           | expression . DIV tExpression
   63           | expression . MOD tExpression
   64           | expression . LESS tExpression
   65           | expression . LESSEQUAL tExpression
   66           | expression . GREATER tExpression
   67           | expression . GREATEREQUAL tExpression
   68           | expression . EQUALEQUAL tExpression
   69           | expression . NOTEQUAL tExpression
   70           | expression . AND tExpression
   71           | expression . OR tExpression
   83 tExpression: NEWARRAY BO expression . COMMA type BC
   87 lValue: expression . DOT IDENTIFIER
   88       | expression . SBO expression SBC
   90 call: expression . DOT IDENTIFIER BO actualList BC

    PLUS          shift, and go to state 127
    MINUS         shift, and go to state 128
    MUL           shift, and go to state 129
    DIV           shift, and go to state 130
    MOD           shift, and go to state 131
    LESS          shift, and go to state 132
    LESSEQUAL     shift, and go to state 133
    GREATER       shift, and go to state 134
    GREATEREQUAL  shift, and go to state 135
    EQUALEQUAL    shift, and go to state 136
    NOTEQUAL      shift, and go to state 137
    AND           shift, and go to state 138
    OR            shift, and go to state 139
    COMMA         shift, and go to state 180
    DOT           shift, and go to state 141
    SBO           shift, and go to state 142


State 151

   56 printStmt: PRINT BO expressionList . BC SEMICOLON
   58 expressionList: expressionList . COMMA expression

    COMMA  shift, and go to state 181
    BC     shift, and go to state 182


State 152

   57 expressionList: expression .
   59 expression: expression . PLUS tExpression
   60           | expression . MINUS tExpression
   61           | expression . MUL tExpression
   62           | expression . DIV tExpression
   63           | expression . MOD tExpression
   64           | expression . LESS tExpression
   65           | expression . LESSEQUAL tExpression
   66           | expression . GREATER tExpression
   67           | expression . GREATEREQUAL tExpression
   68           | expression . EQUALEQUAL tExpression
   69           | expression . NOTEQUAL tExpression
   70           | expression . AND tExpression
   71           | expression . OR tExpression
   87 lValue: expression . DOT IDENTIFIER
   88       | expression . SBO expression SBC
   90 call: expression . DOT IDENTIFIER BO actualList BC

    PLUS          shift, and go to state 127
    MINUS         shift, and go to state 128
    MUL           shift, and go to state 129
    DIV           shift, and go to state 130
    MOD           shift, and go to state 131
    LESS          shift, and go to state 132
    LESSEQUAL     shift, and go to state 133
    GREATER       shift, and go to state 134
    GREATEREQUAL  shift, and go to state 135
    EQUALEQUAL    shift, and go to state 136
    NOTEQUAL      shift, and go to state 137
    AND           shift, and go to state 138
    OR            shift, and go to state 139
    DOT           shift, and go to state 141
    SBO           shift, and go to state 142

    $default  reduce using rule 57 (expressionList)


State 153

   80 tExpression: READINTEGER BO BC .

    $default  reduce using rule 80 (tExpression)


State 154

   81 tExpression: READLINE BO BC .

    $default  reduce using rule 81 (tExpression)


State 155

   77 tExpression: BO expression BC .

    $default  reduce using rule 77 (tExpression)


State 156

   59 expression: expression . PLUS tExpression
   60           | expression . MINUS tExpression
   61           | expression . MUL tExpression
   62           | expression . DIV tExpression
   63           | expression . MOD tExpression
   64           | expression . LESS tExpression
   65           | expression . LESSEQUAL tExpression
   66           | expression . GREATER tExpression
   67           | expression . GREATEREQUAL tExpression
   68           | expression . EQUALEQUAL tExpression
   69           | expression . NOTEQUAL tExpression
   70           | expression . AND tExpression
   71           | expression . OR tExpression
   87 lValue: expression . DOT IDENTIFIER
   88       | expression . SBO expression SBC
   90 call: expression . DOT IDENTIFIER BO actualList BC
   93 actuals: expression .

    PLUS          shift, and go to state 127
    MINUS         shift, and go to state 128
    MUL           shift, and go to state 129
    DIV           shift, and go to state 130
    MOD           shift, and go to state 131
    LESS          shift, and go to state 132
    LESSEQUAL     shift, and go to state 133
    GREATER       shift, and go to state 134
    GREATEREQUAL  shift, and go to state 135
    EQUALEQUAL    shift, and go to state 136
    NOTEQUAL      shift, and go to state 137
    AND           shift, and go to state 138
    OR            shift, and go to state 139
    DOT           shift, and go to state 141
    SBO           shift, and go to state 142

    $default  reduce using rule 93 (actuals)


State 157

   89 call: IDENTIFIER BO actualList . BC

    BC  shift, and go to state 183


State 158

   91 actualList: actuals .
   94 actuals: actuals . COMMA expression

    COMMA  shift, and go to state 184

    $default  reduce using rule 91 (actualList)


State 159

   59 expression: expression . PLUS tExpression
   60           | expression . MINUS tExpression
   61           | expression . MUL tExpression
   62           | expression . DIV tExpression
   63           | expression . MOD tExpression
   64           | expression . LESS tExpression
   65           | expression . LESSEQUAL tExpression
   66           | expression . GREATER tExpression
   67           | expression . GREATEREQUAL tExpression
   68           | expression . EQUALEQUAL tExpression
   69           | expression . NOTEQUAL tExpression
   70           | expression . AND tExpression
   71           | expression . OR tExpression
   87 lValue: expression . DOT IDENTIFIER
   88       | expression . SBO expression SBC
   90 call: expression . DOT IDENTIFIER BO actualList BC

    PLUS          shift, and go to state 127
    MINUS         shift, and go to state 128
    MUL           shift, and go to state 129
    DIV           shift, and go to state 130
    MOD           shift, and go to state 131
    LESS          shift, and go to state 132
    LESSEQUAL     shift, and go to state 133
    GREATER       shift, and go to state 134
    GREATEREQUAL  shift, and go to state 135
    EQUALEQUAL    shift, and go to state 136
    NOTEQUAL      shift, and go to state 137
    AND           shift, and go to state 138
    OR            shift, and go to state 139
    DOT           shift, and go to state 141
    SBO           shift, and go to state 142


State 160

   59 expression: expression PLUS tExpression .
   72           | tExpression .

    PLUS          reduce using rule 59 (expression)
    PLUS          [reduce using rule 72 (expression)]
    MINUS         reduce using rule 59 (expression)
    MINUS         [reduce using rule 72 (expression)]
    MUL           reduce using rule 59 (expression)
    MUL           [reduce using rule 72 (expression)]
    DIV           reduce using rule 59 (expression)
    DIV           [reduce using rule 72 (expression)]
    MOD           reduce using rule 59 (expression)
    MOD           [reduce using rule 72 (expression)]
    LESS          reduce using rule 59 (expression)
    LESS          [reduce using rule 72 (expression)]
    LESSEQUAL     reduce using rule 59 (expression)
    LESSEQUAL     [reduce using rule 72 (expression)]
    GREATER       reduce using rule 59 (expression)
    GREATER       [reduce using rule 72 (expression)]
    GREATEREQUAL  reduce using rule 59 (expression)
    GREATEREQUAL  [reduce using rule 72 (expression)]
    EQUALEQUAL    reduce using rule 59 (expression)
    EQUALEQUAL    [reduce using rule 72 (expression)]
    NOTEQUAL      reduce using rule 59 (expression)
    NOTEQUAL      [reduce using rule 72 (expression)]
    AND           reduce using rule 59 (expression)
    AND           [reduce using rule 72 (expression)]
    OR            reduce using rule 59 (expression)
    OR            [reduce using rule 72 (expression)]
    DOT           reduce using rule 59 (expression)
    DOT           [reduce using rule 72 (expression)]
    SBO           reduce using rule 59 (expression)
    SBO           [reduce using rule 72 (expression)]
    $default      reduce using rule 59 (expression)


State 161

   60 expression: expression MINUS tExpression .
   72           | tExpression .

    PLUS          reduce using rule 60 (expression)
    PLUS          [reduce using rule 72 (expression)]
    MINUS         reduce using rule 60 (expression)
    MINUS         [reduce using rule 72 (expression)]
    MUL           reduce using rule 60 (expression)
    MUL           [reduce using rule 72 (expression)]
    DIV           reduce using rule 60 (expression)
    DIV           [reduce using rule 72 (expression)]
    MOD           reduce using rule 60 (expression)
    MOD           [reduce using rule 72 (expression)]
    LESS          reduce using rule 60 (expression)
    LESS          [reduce using rule 72 (expression)]
    LESSEQUAL     reduce using rule 60 (expression)
    LESSEQUAL     [reduce using rule 72 (expression)]
    GREATER       reduce using rule 60 (expression)
    GREATER       [reduce using rule 72 (expression)]
    GREATEREQUAL  reduce using rule 60 (expression)
    GREATEREQUAL  [reduce using rule 72 (expression)]
    EQUALEQUAL    reduce using rule 60 (expression)
    EQUALEQUAL    [reduce using rule 72 (expression)]
    NOTEQUAL      reduce using rule 60 (expression)
    NOTEQUAL      [reduce using rule 72 (expression)]
    AND           reduce using rule 60 (expression)
    AND           [reduce using rule 72 (expression)]
    OR            reduce using rule 60 (expression)
    OR            [reduce using rule 72 (expression)]
    DOT           reduce using rule 60 (expression)
    DOT           [reduce using rule 72 (expression)]
    SBO           reduce using rule 60 (expression)
    SBO           [reduce using rule 72 (expression)]
    $default      reduce using rule 60 (expression)


State 162

   61 expression: expression MUL tExpression .
   72           | tExpression .

    PLUS          reduce using rule 61 (expression)
    PLUS          [reduce using rule 72 (expression)]
    MINUS         reduce using rule 61 (expression)
    MINUS         [reduce using rule 72 (expression)]
    MUL           reduce using rule 61 (expression)
    MUL           [reduce using rule 72 (expression)]
    DIV           reduce using rule 61 (expression)
    DIV           [reduce using rule 72 (expression)]
    MOD           reduce using rule 61 (expression)
    MOD           [reduce using rule 72 (expression)]
    LESS          reduce using rule 61 (expression)
    LESS          [reduce using rule 72 (expression)]
    LESSEQUAL     reduce using rule 61 (expression)
    LESSEQUAL     [reduce using rule 72 (expression)]
    GREATER       reduce using rule 61 (expression)
    GREATER       [reduce using rule 72 (expression)]
    GREATEREQUAL  reduce using rule 61 (expression)
    GREATEREQUAL  [reduce using rule 72 (expression)]
    EQUALEQUAL    reduce using rule 61 (expression)
    EQUALEQUAL    [reduce using rule 72 (expression)]
    NOTEQUAL      reduce using rule 61 (expression)
    NOTEQUAL      [reduce using rule 72 (expression)]
    AND           reduce using rule 61 (expression)
    AND           [reduce using rule 72 (expression)]
    OR            reduce using rule 61 (expression)
    OR            [reduce using rule 72 (expression)]
    DOT           reduce using rule 61 (expression)
    DOT           [reduce using rule 72 (expression)]
    SBO           reduce using rule 61 (expression)
    SBO           [reduce using rule 72 (expression)]
    $default      reduce using rule 61 (expression)


State 163

   62 expression: expression DIV tExpression .
   72           | tExpression .

    PLUS          reduce using rule 62 (expression)
    PLUS          [reduce using rule 72 (expression)]
    MINUS         reduce using rule 62 (expression)
    MINUS         [reduce using rule 72 (expression)]
    MUL           reduce using rule 62 (expression)
    MUL           [reduce using rule 72 (expression)]
    DIV           reduce using rule 62 (expression)
    DIV           [reduce using rule 72 (expression)]
    MOD           reduce using rule 62 (expression)
    MOD           [reduce using rule 72 (expression)]
    LESS          reduce using rule 62 (expression)
    LESS          [reduce using rule 72 (expression)]
    LESSEQUAL     reduce using rule 62 (expression)
    LESSEQUAL     [reduce using rule 72 (expression)]
    GREATER       reduce using rule 62 (expression)
    GREATER       [reduce using rule 72 (expression)]
    GREATEREQUAL  reduce using rule 62 (expression)
    GREATEREQUAL  [reduce using rule 72 (expression)]
    EQUALEQUAL    reduce using rule 62 (expression)
    EQUALEQUAL    [reduce using rule 72 (expression)]
    NOTEQUAL      reduce using rule 62 (expression)
    NOTEQUAL      [reduce using rule 72 (expression)]
    AND           reduce using rule 62 (expression)
    AND           [reduce using rule 72 (expression)]
    OR            reduce using rule 62 (expression)
    OR            [reduce using rule 72 (expression)]
    DOT           reduce using rule 62 (expression)
    DOT           [reduce using rule 72 (expression)]
    SBO           reduce using rule 62 (expression)
    SBO           [reduce using rule 72 (expression)]
    $default      reduce using rule 62 (expression)


State 164

   63 expression: expression MOD tExpression .
   72           | tExpression .

    PLUS          reduce using rule 63 (expression)
    PLUS          [reduce using rule 72 (expression)]
    MINUS         reduce using rule 63 (expression)
    MINUS         [reduce using rule 72 (expression)]
    MUL           reduce using rule 63 (expression)
    MUL           [reduce using rule 72 (expression)]
    DIV           reduce using rule 63 (expression)
    DIV           [reduce using rule 72 (expression)]
    MOD           reduce using rule 63 (expression)
    MOD           [reduce using rule 72 (expression)]
    LESS          reduce using rule 63 (expression)
    LESS          [reduce using rule 72 (expression)]
    LESSEQUAL     reduce using rule 63 (expression)
    LESSEQUAL     [reduce using rule 72 (expression)]
    GREATER       reduce using rule 63 (expression)
    GREATER       [reduce using rule 72 (expression)]
    GREATEREQUAL  reduce using rule 63 (expression)
    GREATEREQUAL  [reduce using rule 72 (expression)]
    EQUALEQUAL    reduce using rule 63 (expression)
    EQUALEQUAL    [reduce using rule 72 (expression)]
    NOTEQUAL      reduce using rule 63 (expression)
    NOTEQUAL      [reduce using rule 72 (expression)]
    AND           reduce using rule 63 (expression)
    AND           [reduce using rule 72 (expression)]
    OR            reduce using rule 63 (expression)
    OR            [reduce using rule 72 (expression)]
    DOT           reduce using rule 63 (expression)
    DOT           [reduce using rule 72 (expression)]
    SBO           reduce using rule 63 (expression)
    SBO           [reduce using rule 72 (expression)]
    $default      reduce using rule 63 (expression)


State 165

   64 expression: expression LESS tExpression .
   72           | tExpression .

    PLUS          reduce using rule 64 (expression)
    PLUS          [reduce using rule 72 (expression)]
    MINUS         reduce using rule 64 (expression)
    MINUS         [reduce using rule 72 (expression)]
    MUL           reduce using rule 64 (expression)
    MUL           [reduce using rule 72 (expression)]
    DIV           reduce using rule 64 (expression)
    DIV           [reduce using rule 72 (expression)]
    MOD           reduce using rule 64 (expression)
    MOD           [reduce using rule 72 (expression)]
    LESS          reduce using rule 64 (expression)
    LESS          [reduce using rule 72 (expression)]
    LESSEQUAL     reduce using rule 64 (expression)
    LESSEQUAL     [reduce using rule 72 (expression)]
    GREATER       reduce using rule 64 (expression)
    GREATER       [reduce using rule 72 (expression)]
    GREATEREQUAL  reduce using rule 64 (expression)
    GREATEREQUAL  [reduce using rule 72 (expression)]
    EQUALEQUAL    reduce using rule 64 (expression)
    EQUALEQUAL    [reduce using rule 72 (expression)]
    NOTEQUAL      reduce using rule 64 (expression)
    NOTEQUAL      [reduce using rule 72 (expression)]
    AND           reduce using rule 64 (expression)
    AND           [reduce using rule 72 (expression)]
    OR            reduce using rule 64 (expression)
    OR            [reduce using rule 72 (expression)]
    DOT           reduce using rule 64 (expression)
    DOT           [reduce using rule 72 (expression)]
    SBO           reduce using rule 64 (expression)
    SBO           [reduce using rule 72 (expression)]
    $default      reduce using rule 64 (expression)


State 166

   65 expression: expression LESSEQUAL tExpression .
   72           | tExpression .

    PLUS          reduce using rule 65 (expression)
    PLUS          [reduce using rule 72 (expression)]
    MINUS         reduce using rule 65 (expression)
    MINUS         [reduce using rule 72 (expression)]
    MUL           reduce using rule 65 (expression)
    MUL           [reduce using rule 72 (expression)]
    DIV           reduce using rule 65 (expression)
    DIV           [reduce using rule 72 (expression)]
    MOD           reduce using rule 65 (expression)
    MOD           [reduce using rule 72 (expression)]
    LESS          reduce using rule 65 (expression)
    LESS          [reduce using rule 72 (expression)]
    LESSEQUAL     reduce using rule 65 (expression)
    LESSEQUAL     [reduce using rule 72 (expression)]
    GREATER       reduce using rule 65 (expression)
    GREATER       [reduce using rule 72 (expression)]
    GREATEREQUAL  reduce using rule 65 (expression)
    GREATEREQUAL  [reduce using rule 72 (expression)]
    EQUALEQUAL    reduce using rule 65 (expression)
    EQUALEQUAL    [reduce using rule 72 (expression)]
    NOTEQUAL      reduce using rule 65 (expression)
    NOTEQUAL      [reduce using rule 72 (expression)]
    AND           reduce using rule 65 (expression)
    AND           [reduce using rule 72 (expression)]
    OR            reduce using rule 65 (expression)
    OR            [reduce using rule 72 (expression)]
    DOT           reduce using rule 65 (expression)
    DOT           [reduce using rule 72 (expression)]
    SBO           reduce using rule 65 (expression)
    SBO           [reduce using rule 72 (expression)]
    $default      reduce using rule 65 (expression)


State 167

   66 expression: expression GREATER tExpression .
   72           | tExpression .

    PLUS          reduce using rule 66 (expression)
    PLUS          [reduce using rule 72 (expression)]
    MINUS         reduce using rule 66 (expression)
    MINUS         [reduce using rule 72 (expression)]
    MUL           reduce using rule 66 (expression)
    MUL           [reduce using rule 72 (expression)]
    DIV           reduce using rule 66 (expression)
    DIV           [reduce using rule 72 (expression)]
    MOD           reduce using rule 66 (expression)
    MOD           [reduce using rule 72 (expression)]
    LESS          reduce using rule 66 (expression)
    LESS          [reduce using rule 72 (expression)]
    LESSEQUAL     reduce using rule 66 (expression)
    LESSEQUAL     [reduce using rule 72 (expression)]
    GREATER       reduce using rule 66 (expression)
    GREATER       [reduce using rule 72 (expression)]
    GREATEREQUAL  reduce using rule 66 (expression)
    GREATEREQUAL  [reduce using rule 72 (expression)]
    EQUALEQUAL    reduce using rule 66 (expression)
    EQUALEQUAL    [reduce using rule 72 (expression)]
    NOTEQUAL      reduce using rule 66 (expression)
    NOTEQUAL      [reduce using rule 72 (expression)]
    AND           reduce using rule 66 (expression)
    AND           [reduce using rule 72 (expression)]
    OR            reduce using rule 66 (expression)
    OR            [reduce using rule 72 (expression)]
    DOT           reduce using rule 66 (expression)
    DOT           [reduce using rule 72 (expression)]
    SBO           reduce using rule 66 (expression)
    SBO           [reduce using rule 72 (expression)]
    $default      reduce using rule 66 (expression)


State 168

   67 expression: expression GREATEREQUAL tExpression .
   72           | tExpression .

    PLUS          reduce using rule 67 (expression)
    PLUS          [reduce using rule 72 (expression)]
    MINUS         reduce using rule 67 (expression)
    MINUS         [reduce using rule 72 (expression)]
    MUL           reduce using rule 67 (expression)
    MUL           [reduce using rule 72 (expression)]
    DIV           reduce using rule 67 (expression)
    DIV           [reduce using rule 72 (expression)]
    MOD           reduce using rule 67 (expression)
    MOD           [reduce using rule 72 (expression)]
    LESS          reduce using rule 67 (expression)
    LESS          [reduce using rule 72 (expression)]
    LESSEQUAL     reduce using rule 67 (expression)
    LESSEQUAL     [reduce using rule 72 (expression)]
    GREATER       reduce using rule 67 (expression)
    GREATER       [reduce using rule 72 (expression)]
    GREATEREQUAL  reduce using rule 67 (expression)
    GREATEREQUAL  [reduce using rule 72 (expression)]
    EQUALEQUAL    reduce using rule 67 (expression)
    EQUALEQUAL    [reduce using rule 72 (expression)]
    NOTEQUAL      reduce using rule 67 (expression)
    NOTEQUAL      [reduce using rule 72 (expression)]
    AND           reduce using rule 67 (expression)
    AND           [reduce using rule 72 (expression)]
    OR            reduce using rule 67 (expression)
    OR            [reduce using rule 72 (expression)]
    DOT           reduce using rule 67 (expression)
    DOT           [reduce using rule 72 (expression)]
    SBO           reduce using rule 67 (expression)
    SBO           [reduce using rule 72 (expression)]
    $default      reduce using rule 67 (expression)


State 169

   68 expression: expression EQUALEQUAL tExpression .
   72           | tExpression .

    PLUS          reduce using rule 68 (expression)
    PLUS          [reduce using rule 72 (expression)]
    MINUS         reduce using rule 68 (expression)
    MINUS         [reduce using rule 72 (expression)]
    MUL           reduce using rule 68 (expression)
    MUL           [reduce using rule 72 (expression)]
    DIV           reduce using rule 68 (expression)
    DIV           [reduce using rule 72 (expression)]
    MOD           reduce using rule 68 (expression)
    MOD           [reduce using rule 72 (expression)]
    LESS          reduce using rule 68 (expression)
    LESS          [reduce using rule 72 (expression)]
    LESSEQUAL     reduce using rule 68 (expression)
    LESSEQUAL     [reduce using rule 72 (expression)]
    GREATER       reduce using rule 68 (expression)
    GREATER       [reduce using rule 72 (expression)]
    GREATEREQUAL  reduce using rule 68 (expression)
    GREATEREQUAL  [reduce using rule 72 (expression)]
    EQUALEQUAL    reduce using rule 68 (expression)
    EQUALEQUAL    [reduce using rule 72 (expression)]
    NOTEQUAL      reduce using rule 68 (expression)
    NOTEQUAL      [reduce using rule 72 (expression)]
    AND           reduce using rule 68 (expression)
    AND           [reduce using rule 72 (expression)]
    OR            reduce using rule 68 (expression)
    OR            [reduce using rule 72 (expression)]
    DOT           reduce using rule 68 (expression)
    DOT           [reduce using rule 72 (expression)]
    SBO           reduce using rule 68 (expression)
    SBO           [reduce using rule 72 (expression)]
    $default      reduce using rule 68 (expression)


State 170

   69 expression: expression NOTEQUAL tExpression .
   72           | tExpression .

    PLUS          reduce using rule 69 (expression)
    PLUS          [reduce using rule 72 (expression)]
    MINUS         reduce using rule 69 (expression)
    MINUS         [reduce using rule 72 (expression)]
    MUL           reduce using rule 69 (expression)
    MUL           [reduce using rule 72 (expression)]
    DIV           reduce using rule 69 (expression)
    DIV           [reduce using rule 72 (expression)]
    MOD           reduce using rule 69 (expression)
    MOD           [reduce using rule 72 (expression)]
    LESS          reduce using rule 69 (expression)
    LESS          [reduce using rule 72 (expression)]
    LESSEQUAL     reduce using rule 69 (expression)
    LESSEQUAL     [reduce using rule 72 (expression)]
    GREATER       reduce using rule 69 (expression)
    GREATER       [reduce using rule 72 (expression)]
    GREATEREQUAL  reduce using rule 69 (expression)
    GREATEREQUAL  [reduce using rule 72 (expression)]
    EQUALEQUAL    reduce using rule 69 (expression)
    EQUALEQUAL    [reduce using rule 72 (expression)]
    NOTEQUAL      reduce using rule 69 (expression)
    NOTEQUAL      [reduce using rule 72 (expression)]
    AND           reduce using rule 69 (expression)
    AND           [reduce using rule 72 (expression)]
    OR            reduce using rule 69 (expression)
    OR            [reduce using rule 72 (expression)]
    DOT           reduce using rule 69 (expression)
    DOT           [reduce using rule 72 (expression)]
    SBO           reduce using rule 69 (expression)
    SBO           [reduce using rule 72 (expression)]
    $default      reduce using rule 69 (expression)


State 171

   70 expression: expression AND tExpression .
   72           | tExpression .

    PLUS          reduce using rule 70 (expression)
    PLUS          [reduce using rule 72 (expression)]
    MINUS         reduce using rule 70 (expression)
    MINUS         [reduce using rule 72 (expression)]
    MUL           reduce using rule 70 (expression)
    MUL           [reduce using rule 72 (expression)]
    DIV           reduce using rule 70 (expression)
    DIV           [reduce using rule 72 (expression)]
    MOD           reduce using rule 70 (expression)
    MOD           [reduce using rule 72 (expression)]
    LESS          reduce using rule 70 (expression)
    LESS          [reduce using rule 72 (expression)]
    LESSEQUAL     reduce using rule 70 (expression)
    LESSEQUAL     [reduce using rule 72 (expression)]
    GREATER       reduce using rule 70 (expression)
    GREATER       [reduce using rule 72 (expression)]
    GREATEREQUAL  reduce using rule 70 (expression)
    GREATEREQUAL  [reduce using rule 72 (expression)]
    EQUALEQUAL    reduce using rule 70 (expression)
    EQUALEQUAL    [reduce using rule 72 (expression)]
    NOTEQUAL      reduce using rule 70 (expression)
    NOTEQUAL      [reduce using rule 72 (expression)]
    AND           reduce using rule 70 (expression)
    AND           [reduce using rule 72 (expression)]
    OR            reduce using rule 70 (expression)
    OR            [reduce using rule 72 (expression)]
    DOT           reduce using rule 70 (expression)
    DOT           [reduce using rule 72 (expression)]
    SBO           reduce using rule 70 (expression)
    SBO           [reduce using rule 72 (expression)]
    $default      reduce using rule 70 (expression)


State 172

   71 expression: expression OR tExpression .
   72           | tExpression .

    PLUS          reduce using rule 71 (expression)
    PLUS          [reduce using rule 72 (expression)]
    MINUS         reduce using rule 71 (expression)
    MINUS         [reduce using rule 72 (expression)]
    MUL           reduce using rule 71 (expression)
    MUL           [reduce using rule 72 (expression)]
    DIV           reduce using rule 71 (expression)
    DIV           [reduce using rule 72 (expression)]
    MOD           reduce using rule 71 (expression)
    MOD           [reduce using rule 72 (expression)]
    LESS          reduce using rule 71 (expression)
    LESS          [reduce using rule 72 (expression)]
    LESSEQUAL     reduce using rule 71 (expression)
    LESSEQUAL     [reduce using rule 72 (expression)]
    GREATER       reduce using rule 71 (expression)
    GREATER       [reduce using rule 72 (expression)]
    GREATEREQUAL  reduce using rule 71 (expression)
    GREATEREQUAL  [reduce using rule 72 (expression)]
    EQUALEQUAL    reduce using rule 71 (expression)
    EQUALEQUAL    [reduce using rule 72 (expression)]
    NOTEQUAL      reduce using rule 71 (expression)
    NOTEQUAL      [reduce using rule 72 (expression)]
    AND           reduce using rule 71 (expression)
    AND           [reduce using rule 72 (expression)]
    OR            reduce using rule 71 (expression)
    OR            [reduce using rule 72 (expression)]
    DOT           reduce using rule 71 (expression)
    DOT           [reduce using rule 72 (expression)]
    SBO           reduce using rule 71 (expression)
    SBO           [reduce using rule 72 (expression)]
    $default      reduce using rule 71 (expression)


State 173

   87 lValue: expression DOT IDENTIFIER .
   90 call: expression DOT IDENTIFIER . BO actualList BC

    BO  shift, and go to state 185

    $default  reduce using rule 87 (lValue)


State 174

   59 expression: expression . PLUS tExpression
   60           | expression . MINUS tExpression
   61           | expression . MUL tExpression
   62           | expression . DIV tExpression
   63           | expression . MOD tExpression
   64           | expression . LESS tExpression
   65           | expression . LESSEQUAL tExpression
   66           | expression . GREATER tExpression
   67           | expression . GREATEREQUAL tExpression
   68           | expression . EQUALEQUAL tExpression
   69           | expression . NOTEQUAL tExpression
   70           | expression . AND tExpression
   71           | expression . OR tExpression
   87 lValue: expression . DOT IDENTIFIER
   88       | expression . SBO expression SBC
   88       | expression SBO expression . SBC
   90 call: expression . DOT IDENTIFIER BO actualList BC

    PLUS          shift, and go to state 127
    MINUS         shift, and go to state 128
    MUL           shift, and go to state 129
    DIV           shift, and go to state 130
    MOD           shift, and go to state 131
    LESS          shift, and go to state 132
    LESSEQUAL     shift, and go to state 133
    GREATER       shift, and go to state 134
    GREATEREQUAL  shift, and go to state 135
    EQUALEQUAL    shift, and go to state 136
    NOTEQUAL      shift, and go to state 137
    AND           shift, and go to state 138
    OR            shift, and go to state 139
    DOT           shift, and go to state 141
    SBO           shift, and go to state 142
    SBC           shift, and go to state 186


State 175

   59 expression: expression . PLUS tExpression
   60           | expression . MINUS tExpression
   61           | expression . MUL tExpression
   62           | expression . DIV tExpression
   63           | expression . MOD tExpression
   64           | expression . LESS tExpression
   65           | expression . LESSEQUAL tExpression
   66           | expression . GREATER tExpression
   67           | expression . GREATEREQUAL tExpression
   68           | expression . EQUALEQUAL tExpression
   69           | expression . NOTEQUAL tExpression
   70           | expression . AND tExpression
   71           | expression . OR tExpression
   85 optEqual: EQUAL expression .
   87 lValue: expression . DOT IDENTIFIER
   88       | expression . SBO expression SBC
   90 call: expression . DOT IDENTIFIER BO actualList BC

    PLUS          shift, and go to state 127
    MINUS         shift, and go to state 128
    MUL           shift, and go to state 129
    DIV           shift, and go to state 130
    MOD           shift, and go to state 131
    LESS          shift, and go to state 132
    LESSEQUAL     shift, and go to state 133
    GREATER       shift, and go to state 134
    GREATEREQUAL  shift, and go to state 135
    EQUALEQUAL    shift, and go to state 136
    NOTEQUAL      shift, and go to state 137
    AND           shift, and go to state 138
    OR            shift, and go to state 139
    DOT           shift, and go to state 141
    SBO           shift, and go to state 142

    PLUS          [reduce using rule 85 (optEqual)]
    MINUS         [reduce using rule 85 (optEqual)]
    MUL           [reduce using rule 85 (optEqual)]
    DIV           [reduce using rule 85 (optEqual)]
    MOD           [reduce using rule 85 (optEqual)]
    LESS          [reduce using rule 85 (optEqual)]
    LESSEQUAL     [reduce using rule 85 (optEqual)]
    GREATER       [reduce using rule 85 (optEqual)]
    GREATEREQUAL  [reduce using rule 85 (optEqual)]
    EQUALEQUAL    [reduce using rule 85 (optEqual)]
    NOTEQUAL      [reduce using rule 85 (optEqual)]
    AND           [reduce using rule 85 (optEqual)]
    OR            [reduce using rule 85 (optEqual)]
    DOT           [reduce using rule 85 (optEqual)]
    SBO           [reduce using rule 85 (optEqual)]
    $default      reduce using rule 85 (optEqual)


State 176

   53 forStmt: FOR BO expression SEMICOLON . expression SEMICOLON expression BC stmtBlock

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 187
    tExpression  go to state 107
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 177

   52 whileStmt: WHILE BO expression BC . stmtBlock

    CBO  shift, and go to state 58

    stmtBlock  go to state 188


State 178

   49 ifStmt: IF BO expression BC . stmtBlock optElse

    CBO  shift, and go to state 58

    stmtBlock  go to state 189


State 179

   82 tExpression: NEW BO IDENTIFIER BC .

    $default  reduce using rule 82 (tExpression)


State 180

   83 tExpression: NEWARRAY BO expression COMMA . type BC

    INT         shift, and go to state 2
    DOUBLE      shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    IDENTIFIER  shift, and go to state 8

    type  go to state 190


State 181

   58 expressionList: expressionList COMMA . expression

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 191
    tExpression  go to state 107
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 182

   56 printStmt: PRINT BO expressionList BC . SEMICOLON

    SEMICOLON  shift, and go to state 192


State 183

   89 call: IDENTIFIER BO actualList BC .

    $default  reduce using rule 89 (call)


State 184

   94 actuals: actuals COMMA . expression

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 193
    tExpression  go to state 107
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 185

   90 call: expression DOT IDENTIFIER BO . actualList BC

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    $default  reduce using rule 92 (actualList)

    expression   go to state 156
    tExpression  go to state 107
    lValue       go to state 108
    call         go to state 109
    actualList   go to state 194
    actuals      go to state 158
    constant     go to state 110


State 186

   88 lValue: expression SBO expression SBC .

    $default  reduce using rule 88 (lValue)


State 187

   53 forStmt: FOR BO expression SEMICOLON expression . SEMICOLON expression BC stmtBlock
   59 expression: expression . PLUS tExpression
   60           | expression . MINUS tExpression
   61           | expression . MUL tExpression
   62           | expression . DIV tExpression
   63           | expression . MOD tExpression
   64           | expression . LESS tExpression
   65           | expression . LESSEQUAL tExpression
   66           | expression . GREATER tExpression
   67           | expression . GREATEREQUAL tExpression
   68           | expression . EQUALEQUAL tExpression
   69           | expression . NOTEQUAL tExpression
   70           | expression . AND tExpression
   71           | expression . OR tExpression
   87 lValue: expression . DOT IDENTIFIER
   88       | expression . SBO expression SBC
   90 call: expression . DOT IDENTIFIER BO actualList BC

    PLUS          shift, and go to state 127
    MINUS         shift, and go to state 128
    MUL           shift, and go to state 129
    DIV           shift, and go to state 130
    MOD           shift, and go to state 131
    LESS          shift, and go to state 132
    LESSEQUAL     shift, and go to state 133
    GREATER       shift, and go to state 134
    GREATEREQUAL  shift, and go to state 135
    EQUALEQUAL    shift, and go to state 136
    NOTEQUAL      shift, and go to state 137
    AND           shift, and go to state 138
    OR            shift, and go to state 139
    SEMICOLON     shift, and go to state 195
    DOT           shift, and go to state 141
    SBO           shift, and go to state 142


State 188

   52 whileStmt: WHILE BO expression BC stmtBlock .

    $default  reduce using rule 52 (whileStmt)


State 189

   49 ifStmt: IF BO expression BC stmtBlock . optElse

    ELSE  shift, and go to state 196

    $default  reduce using rule 50 (optElse)

    optElse  go to state 197


State 190

   83 tExpression: NEWARRAY BO expression COMMA type . BC

    BC  shift, and go to state 198


State 191

   58 expressionList: expressionList COMMA expression .
   59 expression: expression . PLUS tExpression
   60           | expression . MINUS tExpression
   61           | expression . MUL tExpression
   62           | expression . DIV tExpression
   63           | expression . MOD tExpression
   64           | expression . LESS tExpression
   65           | expression . LESSEQUAL tExpression
   66           | expression . GREATER tExpression
   67           | expression . GREATEREQUAL tExpression
   68           | expression . EQUALEQUAL tExpression
   69           | expression . NOTEQUAL tExpression
   70           | expression . AND tExpression
   71           | expression . OR tExpression
   87 lValue: expression . DOT IDENTIFIER
   88       | expression . SBO expression SBC
   90 call: expression . DOT IDENTIFIER BO actualList BC

    PLUS          shift, and go to state 127
    MINUS         shift, and go to state 128
    MUL           shift, and go to state 129
    DIV           shift, and go to state 130
    MOD           shift, and go to state 131
    LESS          shift, and go to state 132
    LESSEQUAL     shift, and go to state 133
    GREATER       shift, and go to state 134
    GREATEREQUAL  shift, and go to state 135
    EQUALEQUAL    shift, and go to state 136
    NOTEQUAL      shift, and go to state 137
    AND           shift, and go to state 138
    OR            shift, and go to state 139
    DOT           shift, and go to state 141
    SBO           shift, and go to state 142

    $default  reduce using rule 58 (expressionList)


State 192

   56 printStmt: PRINT BO expressionList BC SEMICOLON .

    $default  reduce using rule 56 (printStmt)


State 193

   59 expression: expression . PLUS tExpression
   60           | expression . MINUS tExpression
   61           | expression . MUL tExpression
   62           | expression . DIV tExpression
   63           | expression . MOD tExpression
   64           | expression . LESS tExpression
   65           | expression . LESSEQUAL tExpression
   66           | expression . GREATER tExpression
   67           | expression . GREATEREQUAL tExpression
   68           | expression . EQUALEQUAL tExpression
   69           | expression . NOTEQUAL tExpression
   70           | expression . AND tExpression
   71           | expression . OR tExpression
   87 lValue: expression . DOT IDENTIFIER
   88       | expression . SBO expression SBC
   90 call: expression . DOT IDENTIFIER BO actualList BC
   94 actuals: actuals COMMA expression .

    PLUS          shift, and go to state 127
    MINUS         shift, and go to state 128
    MUL           shift, and go to state 129
    DIV           shift, and go to state 130
    MOD           shift, and go to state 131
    LESS          shift, and go to state 132
    LESSEQUAL     shift, and go to state 133
    GREATER       shift, and go to state 134
    GREATEREQUAL  shift, and go to state 135
    EQUALEQUAL    shift, and go to state 136
    NOTEQUAL      shift, and go to state 137
    AND           shift, and go to state 138
    OR            shift, and go to state 139
    DOT           shift, and go to state 141
    SBO           shift, and go to state 142

    $default  reduce using rule 94 (actuals)


State 194

   90 call: expression DOT IDENTIFIER BO actualList . BC

    BC  shift, and go to state 199


State 195

   53 forStmt: FOR BO expression SEMICOLON expression SEMICOLON . expression BC stmtBlock

    _NULL         shift, and go to state 76
    THIS          shift, and go to state 77
    NEW           shift, and go to state 83
    NEWARRAY      shift, and go to state 84
    READINTEGER   shift, and go to state 86
    READLINE      shift, and go to state 87
    _TRUE         shift, and go to state 88
    _FALSE        shift, and go to state 89
    MINUS         shift, and go to state 90
    NOT           shift, and go to state 91
    BO            shift, and go to state 92
    INT_VALUE     shift, and go to state 94
    DOUBLE_VALUE  shift, and go to state 95
    STRING_VALUE  shift, and go to state 96
    IDENTIFIER    shift, and go to state 97

    expression   go to state 200
    tExpression  go to state 107
    lValue       go to state 108
    call         go to state 109
    constant     go to state 110


State 196

   51 optElse: ELSE . stmtBlock

    CBO  shift, and go to state 58

    stmtBlock  go to state 201


State 197

   49 ifStmt: IF BO expression BC stmtBlock optElse .

    $default  reduce using rule 49 (ifStmt)


State 198

   83 tExpression: NEWARRAY BO expression COMMA type BC .

    $default  reduce using rule 83 (tExpression)


State 199

   90 call: expression DOT IDENTIFIER BO actualList BC .

    $default  reduce using rule 90 (call)


State 200

   53 forStmt: FOR BO expression SEMICOLON expression SEMICOLON expression . BC stmtBlock
   59 expression: expression . PLUS tExpression
   60           | expression . MINUS tExpression
   61           | expression . MUL tExpression
   62           | expression . DIV tExpression
   63           | expression . MOD tExpression
   64           | expression . LESS tExpression
   65           | expression . LESSEQUAL tExpression
   66           | expression . GREATER tExpression
   67           | expression . GREATEREQUAL tExpression
   68           | expression . EQUALEQUAL tExpression
   69           | expression . NOTEQUAL tExpression
   70           | expression . AND tExpression
   71           | expression . OR tExpression
   87 lValue: expression . DOT IDENTIFIER
   88       | expression . SBO expression SBC
   90 call: expression . DOT IDENTIFIER BO actualList BC

    PLUS          shift, and go to state 127
    MINUS         shift, and go to state 128
    MUL           shift, and go to state 129
    DIV           shift, and go to state 130
    MOD           shift, and go to state 131
    LESS          shift, and go to state 132
    LESSEQUAL     shift, and go to state 133
    GREATER       shift, and go to state 134
    GREATEREQUAL  shift, and go to state 135
    EQUALEQUAL    shift, and go to state 136
    NOTEQUAL      shift, and go to state 137
    AND           shift, and go to state 138
    OR            shift, and go to state 139
    DOT           shift, and go to state 141
    SBO           shift, and go to state 142
    BC            shift, and go to state 202


State 201

   51 optElse: ELSE stmtBlock .

    $default  reduce using rule 51 (optElse)


State 202

   53 forStmt: FOR BO expression SEMICOLON expression SEMICOLON expression BC . stmtBlock

    CBO  shift, and go to state 58

    stmtBlock  go to state 203


State 203

   53 forStmt: FOR BO expression SEMICOLON expression SEMICOLON expression BC stmtBlock .

    $default  reduce using rule 53 (forStmt)
